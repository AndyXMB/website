(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{545:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),s("AddonLogo"),s("p",[t._v("This is the binding for the "),s("a",{attrs:{href:"http://www.eq-3.de/",target:"_blank",rel:"noopener noreferrer"}},[t._v("eQ-3 MAX! Home Solution"),s("OutboundLink")],1),t._v(".\nThis binding allows you to integrate, view and control the MAX! Thermostats in the openHAB environment")]),t._m(1),s("p",[t._v("This binding support 6 different things types")]),t._m(2),t._m(3),t._m(4),s("p",[t._v("The discovery process for the MAX! binding works in 2 steps.\nWhen the binding is started or when manually triggered, the network is queried for the existence of a MAX! Cube LAN gateway.\nWhen the Cube is found, it will become available in the discovery inbox. Periodically the network is queried again for a Cube.")]),s("p",[t._v("Once the Cube is available in openHAB, all the devices connected to it are discovered and added to the discovery inbox.\nNo scan is needed to trigger this.")]),t._m(5),s("p",[t._v("In the openHAB2 version of this binding there are no binding wide settings.\nAll the configuration settings are now per MAX! Cube, hence in case you have multiple Cubes, they can run with alternative settings.")]),t._m(6),t._m(7),t._m(8),t._m(9),s("p",[t._v("Depending on the thing it supports different Channels")]),t._m(10),t._m(11),t._m(12),s("p",[t._v("max.things:")]),t._m(13),s("p",[t._v("max.items:")]),t._m(14),s("p",[t._v("demo.sitemap:")]),t._m(15),t._m(16),s("p",[t._v('Please be aware that the actual temperature measure for thermostats is only updated after the valve moved position or the thermostats mode has changed.\nHence the temperature you see may be hours old.\nIn that case you can update the temperature by changing the mode, wait approximately 2 minutes and change the mode back.\nThere is an experimental mode that does this automatically.\nThis can be enabled by showing the "advanced settings" (e.g. in HABmin UI).\nThen the "Actual Temperature Refresh Rate" can be set.\nMinimum refresh rate once/10 minutes, recommended 60min to avoid excessive battery drain.')]),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),s("p",[t._v("In the HABmin thing configuration screen, several action buttons are available to trigger special actions on the Cube")]),t._m(25),s("p",[t._v("On the MAX! devices you can trigger the following action")]),t._m(26),s("p",[t._v("Note: In Paper UI there are no action buttons.\nYou can trigger these actions changing from 'No Action' in the dropdown to the action value.")]),s("DocPreviousVersions"),s("EditPageLink")],1)},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"max-binding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#max-binding","aria-hidden":"true"}},[this._v("#")]),this._v(" MAX! Binding")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"supported-things"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#supported-things","aria-hidden":"true"}},[this._v("#")]),this._v(" Supported Things")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("Thing")]),s("th",[t._v("Type")]),s("th",[t._v("Description")])])]),s("tbody",[s("tr",[s("td",[t._v("bridge")]),s("td",[t._v("Bridge")]),s("td",[t._v("This is the MAX! Cube LAN gateway.")])]),s("tr",[s("td",[t._v("thermostat")]),s("td",[t._v("Thing")]),s("td",[t._v('This is for the MAX! Heating Thermostat. This is also used for the powerplug switch "Zwischenstecker-Schaltaktor".')])]),s("tr",[s("td",[t._v("thermostatplus")]),s("td",[t._v("Thing")]),s("td",[t._v("This is for the MAX! Heating Thermostat+. This is the type that can hold the program by itself.")])]),s("tr",[s("td",[t._v("wallthermostat")]),s("td",[t._v("Thing")]),s("td",[t._v("MAX! Wall Thermostat.")])]),s("tr",[s("td",[t._v("ecoswitch")]),s("td",[t._v("Thing")]),s("td",[t._v("MAX! Ecoswitch.")])]),s("tr",[s("td",[t._v("shuttercontact")]),s("td",[t._v("Thing")]),s("td",[t._v("MAX! Shuttercontact / Window Contact.")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Generally one does not have to worry about the thing types as they are automatically defined.\nIf for any reason you need to manually define the Things and you are not exactly sure what type of thermostat you have, you can choose "),e("code",[this._v("thermostat")]),this._v(" for both the thermostat and thermostat+, this will not affect their working.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"discovery"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#discovery","aria-hidden":"true"}},[this._v("#")]),this._v(" Discovery")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"binding-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Binding Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"thing-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#thing-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Thing Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("All the things are identified by their serial number, hence this is mandatory.\nThe Cube ("),e("code",[this._v("bridge")]),this._v(" thing) also requires the IP address to be defined.\nAll other configuration is optional.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Note that several configuration options are automatically populated.\nLater versions of the binding may allow you to update this information.\nThese properties can be found in the "),e("code",[this._v("Device Settings")]),this._v(" section of parameters.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"channels"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#channels","aria-hidden":"true"}},[this._v("#")]),this._v(" Channels")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("Channel Type ID")]),s("th",[t._v("Item Type")]),s("th",[t._v("Description")]),s("th",[t._v("Available on thing")])])]),s("tbody",[s("tr",[s("td",[t._v("mode")]),s("td",[t._v("String")]),s("td",[t._v("This channel indicates the mode of a thermostat (AUTOMATIC/MANUAL/BOOST/VACATION).")]),s("td",[t._v("thermostat, thermostatplus, wallthermostat")])]),s("tr",[s("td",[t._v("battery_low")]),s("td",[t._v("Switch")]),s("td",[t._v("This channel indicates if the device battery is low (ON/OFF).")]),s("td",[t._v("thermostat, thermostatplus, wallthermostat, ecoswitch, shuttercontact")])]),s("tr",[s("td",[t._v("set_temp")]),s("td",[t._v("Number")]),s("td",[t._v("This channel indicates the sets temperature (in °C) of a thermostat.")]),s("td",[t._v("thermostat, thermostatplus, wallthermostat")])]),s("tr",[s("td",[t._v("actual_temp")]),s("td",[t._v("Number")]),s("td",[t._v("This channel indicates the measured temperature (in °C) of a thermostat (see below for more details).")]),s("td",[t._v("thermostat, thermostatplus, wallthermostat")])]),s("tr",[s("td",[t._v("valve")]),s("td",[t._v("Number")]),s("td",[t._v("This channel indicates the valve opening in %. Note this is an advanced setting, normally not visible.")]),s("td",[t._v("thermostat, thermostatplus, wallthermostat")])]),s("tr",[s("td",[t._v("locked")]),s("td",[t._v("Contact")]),s("td",[t._v("This channel indicates if the thermostat is locked for adjustments (OPEN/CLOSED). Note this is an advanced setting, normally not visible.")]),s("td",[t._v("thermostat, thermostatplus, wallthermostat")])]),s("tr",[s("td",[t._v("contact_state")]),s("td",[t._v("Contact")]),s("td",[t._v("This channel indicates the contact state for a shutterswitch (OPEN/CLOSED).")]),s("td",[t._v("shuttercontact")])]),s("tr",[s("td",[t._v("free_mem")]),s("td",[t._v("Number")]),s("td",[t._v("This channel indicates the free available memory on the cube to hold send commands. Note this is an advanced setting, normally not visible.")]),s("td",[t._v("bridge")])]),s("tr",[s("td",[t._v("duty_cycle")]),s("td",[t._v("Number")]),s("td",[t._v("This channel indicates the duty cycle (due to regulatory compliance reasons the cube is allowed only to send for a limited time. Duty cycle indicates how much of the available time is consumed) Note this is an advanced setting, normally not visible.")]),s("td",[t._v("bridge")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"full-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full-example","aria-hidden":"true"}},[this._v("#")]),this._v(" Full Example")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In most cases no Things need to be defined manually.\nIn case your Cube can't be discovered you need a "),e("code",[this._v("max:bridge")]),this._v(" definition including the right IP address of the Cube.\nOnly in exceptional cases you would need to define the thermostats etc.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dsl"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("Bridge")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("max"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("bridge"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("KEQ0565026")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" ipAddress"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"192.168.3.9"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serialNumber"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"KEQ0565026"')]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("Thing")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("max"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("thermostat"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("KEQ0565026"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("KEQ0565123")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" serialNumber"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"KEQ0565123"')]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dsl"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("Group")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("gMAX")]),t._v(" \t\t\t"),s("span",{attrs:{class:"token string"}},[t._v('"MAX Heating"')]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("\t<temperature>")]),t._v("\t"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"home-group"')]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("maxBattery")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Battery Low"')]),s("span",{attrs:{class:"token tag"}},[t._v(" (gMAX)")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("channel"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"max:thermostat:KEQ0565026:KEQ0648949:battery_low"')]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("maxMode")]),t._v("    "),s("span",{attrs:{class:"token string"}},[t._v('"Thermostat Mode Setting"')]),s("span",{attrs:{class:"token tag"}},[t._v(" (gMAX)")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("channel"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"max:thermostat:KEQ0565026:KEQ0648949:mode"')]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("maxActual")]),t._v("  "),s("span",{attrs:{class:"token string"}},[t._v('"Actual measured room temperature  [%.1f °C]"')]),s("span",{attrs:{class:"token tag"}},[t._v(" (gMAX)")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("channel"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"max:thermostat:KEQ0565026:KEQ0648949:actual_temp"')]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("maxSetTemp")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Thermostat temperature setpoint [%.1f °C]"')]),s("span",{attrs:{class:"token tag"}},[t._v(" (gMAX)")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("channel"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"max:thermostat:KEQ0565026:KEQ0648949:set_temp"')]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dsl"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("sitemap")]),t._v(" demo "),s("span",{attrs:{class:"token constant"}},[t._v("label")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"Main Menu"')]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("Frame")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("label")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"MAX Heating System"')]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{attrs:{class:"token keyword"}},[t._v("Switch")]),t._v("  "),s("span",{attrs:{class:"token class-name"}},[t._v("item")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("maxMode  "),s("span",{attrs:{class:"token constant"}},[t._v("icon")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"climate"')]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("mappings")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("AUTOMATIC"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("AUTOMATIC"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MANUAL"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("MANUAL"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BOOST"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("BOOST"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t"),s("span",{attrs:{class:"token keyword"}},[t._v("Setpoint")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("item")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("maxSetTemp "),s("span",{attrs:{class:"token constant"}},[t._v("minValue")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token number"}},[t._v("4.5")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("maxValue")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token number"}},[t._v("32")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("step")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token number"}},[t._v("0.5")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("icon")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"temperature"')]),t._v("\n\t\t\t"),s("span",{attrs:{class:"token keyword"}},[t._v("Text")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("item")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("maxActual  "),s("span",{attrs:{class:"token constant"}},[t._v("icon")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"temperature"')]),t._v("\n\t\t\t"),s("span",{attrs:{class:"token keyword"}},[t._v("Switch")]),t._v("  "),s("span",{attrs:{class:"token class-name"}},[t._v("item")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("maxBattery\n\t\t"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"actual-temperature-update"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#actual-temperature-update","aria-hidden":"true"}},[this._v("#")]),this._v(" Actual Temperature Update")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"new-device-inclusion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-device-inclusion","aria-hidden":"true"}},[this._v("#")]),this._v(" New Device Inclusion")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("When clicking the discovery button for MAX! devices manually in the UI, you  will start New Device Inclusion mode for 60seconds.\nDuring this time, holding the "),e("em",[this._v("boost")]),this._v(" button on your device will link it to the Cube.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"device-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#device-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Device configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In the "),e("em",[this._v("Configuration Parameters")]),this._v(" section of the device Things you can update some of the device configuration parameters.\nCurrently the following parameters can be updated:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("em",[this._v("name")]),this._v(" Name of the thermostat stored in the Cube (also used by the eQ-3 software).")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("em",[this._v("Cube device configurable parameters")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("em",[this._v("ntpServer1")]),this._v(" The hostname for NTP Server 1 used by the Cube to get the time")]),e("li",[e("em",[this._v("ntpServer2")]),this._v(" The hostname for NTP Server 2 used by the Cube to get the time")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"action-buttons-visible-in-habmin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#action-buttons-visible-in-habmin","aria-hidden":"true"}},[this._v("#")]),this._v(" Action Buttons (visible in HABmin)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[e("em",[this._v("Reset Cube Configuration")]),this._v(" resets the MAX! Cube room and device information. Devices will need to be included again! To use this button you need to enable 'Advanced settings'")])]),e("li",[e("p",[e("em",[this._v("Restart Cube")]),this._v(" triggers the reboot of a Cube. This can be used if a Cube became unresponsive to commands or no connection can be made. (e.g. if you tried to connect to the Cube with multiple applications at the same time)")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("em",[this._v("Delete Device from Cube")]),this._v(" deletes the device from the MAX! Cube. Device will need to be included again! To use this button you need to enable 'Advanced settings'")])])}],!1,null,null,null);e.default=n.exports}}]);